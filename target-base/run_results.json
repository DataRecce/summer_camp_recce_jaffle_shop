{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-07-29T22:33:33.230012Z", "invocation_id": "83b50218-9060-48e3-920c-213ab3d7eb5b", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.115695Z", "completed_at": "2025-07-29T22:33:33.118604Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.120036Z", "completed_at": "2025-07-29T22:33:33.120041Z"}], "thread_id": "Thread-1", "execution_time": 0.005327939987182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.118772Z", "completed_at": "2025-07-29T22:33:33.119759Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.120289Z", "completed_at": "2025-07-29T22:33:33.120291Z"}], "thread_id": "Thread-2", "execution_time": 0.005384922027587891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.120518Z", "completed_at": "2025-07-29T22:33:33.121242Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.121825Z", "completed_at": "2025-07-29T22:33:33.121828Z"}], "thread_id": "Thread-3", "execution_time": 0.00635218620300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.jaffle_shop.raw_payments", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.122906Z", "completed_at": "2025-07-29T22:33:33.127133Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.127287Z", "completed_at": "2025-07-29T22:33:33.127290Z"}], "thread_id": "Thread-5", "execution_time": 0.0052683353424072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_customers", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_shop\".\"prod\".\"raw_customers\"\n\n)\n\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source", "relation_name": "\"jaffle_shop\".\"prod\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.124491Z", "completed_at": "2025-07-29T22:33:33.127560Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.127736Z", "completed_at": "2025-07-29T22:33:33.127740Z"}], "thread_id": "Thread-7", "execution_time": 0.005548954010009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_orders", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_shop\".\"prod\".\"raw_orders\"\n\n)\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n    from source", "relation_name": "\"jaffle_shop\".\"prod\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.125899Z", "completed_at": "2025-07-29T22:33:33.128459Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.129388Z", "completed_at": "2025-07-29T22:33:33.129391Z"}], "thread_id": "Thread-9", "execution_time": 0.005139827728271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.stg_payments", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_shop\".\"prod\".\"raw_payments\"\n\n)\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source", "relation_name": "\"jaffle_shop\".\"prod\".\"stg_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.129648Z", "completed_at": "2025-07-29T22:33:33.139351Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.146402Z", "completed_at": "2025-07-29T22:33:33.146406Z"}], "thread_id": "Thread-7", "execution_time": 0.018298864364624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_shop\".\"prod\".\"stg_customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.136428Z", "completed_at": "2025-07-29T22:33:33.146244Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.148984Z", "completed_at": "2025-07-29T22:33:33.148987Z"}], "thread_id": "Thread-11", "execution_time": 0.020279884338378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_shop\".\"prod\".\"stg_customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.144620Z", "completed_at": "2025-07-29T22:33:33.149338Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.159250Z", "completed_at": "2025-07-29T22:33:33.159253Z"}], "thread_id": "Thread-14", "execution_time": 0.023986101150512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_shop\".\"prod\".\"stg_orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.140551Z", "completed_at": "2025-07-29T22:33:33.149479Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.159514Z", "completed_at": "2025-07-29T22:33:33.159516Z"}], "thread_id": "Thread-13", "execution_time": 0.02445507049560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_shop\".\"prod\".\"stg_orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.146654Z", "completed_at": "2025-07-29T22:33:33.155913Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.160095Z", "completed_at": "2025-07-29T22:33:33.160098Z"}], "thread_id": "Thread-15", "execution_time": 0.0246279239654541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_shop\".\"prod\".\"stg_orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.149638Z", "completed_at": "2025-07-29T22:33:33.159952Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.160958Z", "completed_at": "2025-07-29T22:33:33.160960Z"}], "thread_id": "Thread-17", "execution_time": 0.02138209342956543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.customers", "compiled": true, "compiled_code": "-- Model: customers\n-- Description: Contains summary information about customers and their orders.\n-- Date Last Modified: 7/28\n-- Last Modified by: Dori\n-- Notes: \n\n\n\nwith customers as (\n\n    select \n        customer_id,\n        first_name,\n        last_name\n    from \"jaffle_shop\".\"prod\".\"stg_customers\"\n\n),\n\norders as (\n\n    select \n        order_id,\n        customer_id,\n        order_date,\n        status\n    from \"jaffle_shop\".\"prod\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select \n        order_id,\n        amount,\n        payment_method\n    from \"jaffle_shop\".\"prod\".\"stg_payments\"\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect \n    customer_id,\n    first_name,\n    last_name,\n    first_order,\n    most_recent_order,\n    number_of_orders,\n    customer_lifetime_value\nfrom final", "relation_name": "\"jaffle_shop\".\"prod\".\"customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.151110Z", "completed_at": "2025-07-29T22:33:33.160351Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.161394Z", "completed_at": "2025-07-29T22:33:33.161397Z"}], "thread_id": "Thread-18", "execution_time": 0.021625280380249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.orders", "compiled": true, "compiled_code": "-- Model: orders\n-- Description: Contains denomarlized information about orders and payments.\n-- Date Last Modified: 7/28\n-- Last Modified by: Dori\n-- Notes: \n\n-- this creates a variable that can be used in the query to run \"for\" loops in sql \n-- personally i think this is overkill for this simple example, but it's the default in jaffle_shop\n\n\nwith orders as (\n\n    select \n        order_id,\n        customer_id,\n        order_date,\n        status\n    from \"jaffle_shop\".\"prod\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select \n        order_id,\n        amount,\n        payment_method\n    from \"jaffle_shop\".\"prod\".\"stg_payments\"\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n        -- this is a list comprehension, it will iterate over the payment_methods list and create a new column for each payment method\n        -- you could also do this with a case statement, but this is more flexible if you add payment methods in the future\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n        -- this is a list comprehension, it will iterate over the payment_methods list and create a new column for each payment method\n        -- you could also do this with a case statement, but this is more flexible if you add payment methods in the future\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect \n    order_id,\n    customer_id,\n    order_date,\n    status,\n    credit_card_amount,\n    coupon_amount,\n    bank_transfer_amount,\n    gift_card_amount,\n    amount\nfrom final", "relation_name": "\"jaffle_shop\".\"prod\".\"orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.153433Z", "completed_at": "2025-07-29T22:33:33.160511Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.161674Z", "completed_at": "2025-07-29T22:33:33.161677Z"}], "thread_id": "Thread-19", "execution_time": 0.02172684669494629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from \"jaffle_shop\".\"prod\".\"stg_payments\"\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.156064Z", "completed_at": "2025-07-29T22:33:33.160808Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.161940Z", "completed_at": "2025-07-29T22:33:33.161943Z"}], "thread_id": "Thread-20", "execution_time": 0.02182292938232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_id\nfrom \"jaffle_shop\".\"prod\".\"stg_payments\"\nwhere payment_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.157684Z", "completed_at": "2025-07-29T22:33:33.161212Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.162447Z", "completed_at": "2025-07-29T22:33:33.162449Z"}], "thread_id": "Thread-21", "execution_time": 0.02211594581604004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    payment_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_shop\".\"prod\".\"stg_payments\"\nwhere payment_id is not null\ngroup by payment_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.168610Z", "completed_at": "2025-07-29T22:33:33.208326Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.217112Z", "completed_at": "2025-07-29T22:33:33.217117Z"}], "thread_id": "Thread-23", "execution_time": 0.05327916145324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.customer_order_pattern", "compiled": true, "compiled_code": "-- Model: customers_order_pattern\n-- Description: Analyzes order patterns for customers.\n-- Date Last Modified: 7/28\n-- Last Modified by: Dori\n-- Notes: \n\nwith customers as (\n\n    select \n        customer_id,\n        first_order,\n        most_recent_order,\n        number_of_orders\n    from \"jaffle_shop\".\"prod\".\"customers\"\n\n)\n\nselect\n    customer_id,\n    first_order,\n    most_recent_order,\n    number_of_orders,\n    DATEDIFF('day', first_order, most_recent_order) AS days_active,\n    DATEDIFF('day', first_order, most_recent_order) / NULLIF(number_of_orders - 1, 0) AS avg_days_between_orders\nfrom customers", "relation_name": "\"jaffle_shop\".\"prod\".\"customer_order_pattern\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.170490Z", "completed_at": "2025-07-29T22:33:33.215238Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.217856Z", "completed_at": "2025-07-29T22:33:33.217858Z"}], "thread_id": "Thread-24", "execution_time": 0.05300712585449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.jaffle_shop.customer_segments", "compiled": true, "compiled_code": "-- Model: customers_segments\n-- Description: Segments customers based on number of orders and lifetime value.\n-- Date Last Modified: 7/28\n-- Last Modified by: Dori\n-- Notes: \n\n-- Customer Segmentation based on number of orders and lifetime value\nSELECT\n    customer_id,\n    number_of_orders,\n    customer_lifetime_value,\n    CASE \n        WHEN number_of_orders > 10 THEN 'Frequent Buyer'\n        WHEN number_of_orders BETWEEN 5 AND 10 THEN 'Occasional Buyer'\n        ELSE 'Rare Buyer'\n    END AS order_frequency_segment,\n    CASE \n        WHEN customer_lifetime_value > 4000 THEN 'High Value'\n        WHEN customer_lifetime_value BETWEEN 1500 AND 4000 THEN 'Medium Value'\n        ELSE 'Low Value'\n    END AS value_segment\nFROM \"jaffle_shop\".\"prod\".\"customers\"", "relation_name": "\"jaffle_shop\".\"prod\".\"customer_segments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.190774Z", "completed_at": "2025-07-29T22:33:33.215519Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.218259Z", "completed_at": "2025-07-29T22:33:33.218262Z"}], "thread_id": "Thread-18", "execution_time": 0.052778005599975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_shop\".\"prod\".\"customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.171829Z", "completed_at": "2025-07-29T22:33:33.215687Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.218677Z", "completed_at": "2025-07-29T22:33:33.218679Z"}], "thread_id": "Thread-4", "execution_time": 0.053376197814941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_shop\".\"prod\".\"customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.192436Z", "completed_at": "2025-07-29T22:33:33.215827Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.218928Z", "completed_at": "2025-07-29T22:33:33.218931Z"}], "thread_id": "Thread-20", "execution_time": 0.05326962471008301, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_shop\".\"prod\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.194104Z", "completed_at": "2025-07-29T22:33:33.216033Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.219190Z", "completed_at": "2025-07-29T22:33:33.219193Z"}], "thread_id": "Thread-2", "execution_time": 0.053366899490356445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.dbt_utils_unique_combination_of_columns_orders_order_id__customer_id.f95c9d9bf3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_id, customer_id\n    from \"jaffle_shop\".\"prod\".\"orders\"\n    group by order_id, customer_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.198179Z", "completed_at": "2025-07-29T22:33:33.216306Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.219445Z", "completed_at": "2025-07-29T22:33:33.219448Z"}], "thread_id": "Thread-6", "execution_time": 0.053446054458618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.199824Z", "completed_at": "2025-07-29T22:33:33.216468Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.219706Z", "completed_at": "2025-07-29T22:33:33.219708Z"}], "thread_id": "Thread-8", "execution_time": 0.053518056869506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect bank_transfer_amount\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere bank_transfer_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.201459Z", "completed_at": "2025-07-29T22:33:33.216614Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.219942Z", "completed_at": "2025-07-29T22:33:33.219945Z"}], "thread_id": "Thread-3", "execution_time": 0.05342602729797363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect coupon_amount\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere coupon_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.203605Z", "completed_at": "2025-07-29T22:33:33.216831Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.220205Z", "completed_at": "2025-07-29T22:33:33.220207Z"}], "thread_id": "Thread-10", "execution_time": 0.05353426933288574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_card_amount\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere credit_card_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.205157Z", "completed_at": "2025-07-29T22:33:33.216971Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.220466Z", "completed_at": "2025-07-29T22:33:33.220468Z"}], "thread_id": "Thread-21", "execution_time": 0.053626060485839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.206733Z", "completed_at": "2025-07-29T22:33:33.217445Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.220786Z", "completed_at": "2025-07-29T22:33:33.220789Z"}], "thread_id": "Thread-5", "execution_time": 0.05380892753601074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gift_card_amount\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere gift_card_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.208479Z", "completed_at": "2025-07-29T22:33:33.217692Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.221334Z", "completed_at": "2025-07-29T22:33:33.221336Z"}], "thread_id": "Thread-12", "execution_time": 0.05421113967895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.210088Z", "completed_at": "2025-07-29T22:33:33.218101Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.221630Z", "completed_at": "2025-07-29T22:33:33.221632Z"}], "thread_id": "Thread-16", "execution_time": 0.05421900749206543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_shop\".\"prod\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_shop\".\"prod\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.213111Z", "completed_at": "2025-07-29T22:33:33.218519Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.221917Z", "completed_at": "2025-07-29T22:33:33.221920Z"}], "thread_id": "Thread-9", "execution_time": 0.05434703826904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_shop\".\"prod\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.223155Z", "completed_at": "2025-07-29T22:33:33.226291Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.226423Z", "completed_at": "2025-07-29T22:33:33.226426Z"}], "thread_id": "Thread-7", "execution_time": 0.0040280818939208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.not_null_customer_order_pattern_customer_id.3f8f4d52ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_shop\".\"prod\".\"customer_order_pattern\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T22:33:33.224738Z", "completed_at": "2025-07-29T22:33:33.226647Z"}, {"name": "execute", "started_at": "2025-07-29T22:33:33.226807Z", "completed_at": "2025-07-29T22:33:33.226809Z"}], "thread_id": "Thread-11", "execution_time": 0.004241943359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_shop.unique_customer_order_pattern_customer_id.99ad852c54", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_shop\".\"prod\".\"customer_order_pattern\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.15596508979797363, "args": {"populate_cache": true, "profiles_dir": "/Users/doriwilson/Documents/summer_camp_recce_jaffle_shop", "require_explicit_package_overrides_for_builtin_materializations": true, "vars": {}, "target_path": "./target-base", "defer": false, "macro_debugging": false, "log_format": "default", "require_resource_names_without_spaces": false, "introspect": true, "strict_mode": false, "cache_selected_only": false, "partial_parse": true, "log_format_file": "debug", "write_json": true, "log_level_file": "debug", "version_check": true, "static": false, "compile": true, "log_level": "info", "target": "prod", "warn_error_options": {"include": [], "exclude": []}, "favor_state": false, "require_nested_cumulative_type_params": false, "printer_width": 80, "empty_catalog": false, "show_resource_report": false, "send_anonymous_usage_stats": true, "print": true, "partial_parse_file_diff": true, "log_path": "/Users/doriwilson/Documents/summer_camp_recce_jaffle_shop/logs", "static_parser": true, "quiet": false, "project_dir": "/Users/doriwilson/Documents/summer_camp_recce_jaffle_shop", "require_batched_execution_for_custom_microbatch_strategy": false, "log_file_max_bytes": 10485760, "use_colors": true, "state_modified_compare_more_unrendered_values": false, "use_colors_file": true, "state_modified_compare_vars": false, "select": [], "indirect_selection": "eager", "which": "generate", "skip_nodes_if_on_run_start_fails": false, "exclude": [], "require_yaml_configuration_for_mf_time_spines": false, "source_freshness_run_project_hooks": false, "invocation_command": "dbt docs generate --target prod --target-path ./target-base"}}